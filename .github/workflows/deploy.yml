name: Deploy to GitHub Pages

on:
  push:
    branches: [master, main] # Trigger on push to master or main branch

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js environment üîß
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build üèóÔ∏è
        run: npm run build
        env:
          CI: false

      - name: Deploy to GitHub Pages üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages

  trigger-e2e:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Send repository_dispatch
        run: |
          curl -X POST https://api.github.com/repos/Corythchambers/qactus-e2e/dispatches \
          -H "Authorization: token ${{ secrets.E2E_REPO_TRIGGER_PAT }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{
            "event_type": "trigger-e2e-tests",
            "client_payload": {
              "trigger_repo": "Corythchambers/cv-app",
              "trigger_sha": "${{ github.sha }}",
              "environment": "production"
            }
          }'

      - name: Wait for E2E tests
        run: |
          echo "Waiting for E2E tests to complete..."
          sleep 30  # Give some time for the E2E workflow to start

          # Poll for E2E test results
          while true; do
            response=$(curl -s -H "Authorization: token ${{ secrets.E2E_REPO_TRIGGER_PAT }}" \
              "https://api.github.com/repos/Corythchambers/qactus-e2e/actions/runs?event=repository_dispatch&branch=main" | head -n 1)
            
            if [[ $response == *"completed"* ]]; then
              if [[ $response == *"success"* ]]; then
                echo "‚úÖ E2E tests passed!"
                exit 0
              else
                echo "‚ùå E2E tests failed!"
                exit 1
              fi
            fi
            
            echo "E2E tests still running... waiting 30 seconds"
            sleep 30
          done
